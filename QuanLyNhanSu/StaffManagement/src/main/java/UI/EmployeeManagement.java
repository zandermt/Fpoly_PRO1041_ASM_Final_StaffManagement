/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package UI;

import CLASS.ChucVu;
import CLASS.LoaiHD;
import CLASS.NhanVien;
import CLASS.PhongBan;
import DAO.ChucVuDAO;
import DAO.LoaiHDDAO;
import DAO.NhanVienDAO;
import DAO.PhongBanDAO;
import UTILS.Auth;
import UTILS.Msgbox;
import UTILS.XDate;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Zander
 */
public class EmployeeManagement extends javax.swing.JInternalFrame {

    /**
     * Creates new form EmployeeManagement
     */
    public EmployeeManagement() {
        initComponents();
        setTitle("Quản lý nhân viên");
        init();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgGioiTinh = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lblMaNV = new javax.swing.JLabel();
        lblMatKhau = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblNgaySinh = new javax.swing.JLabel();
        lblSdt = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblDiaChi = new javax.swing.JLabel();
        lblLuong = new javax.swing.JLabel();
        lblMaPb = new javax.swing.JLabel();
        lblMaCv = new javax.swing.JLabel();
        lblMaUv = new javax.swing.JLabel();
        lblMaLoaiHd = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        txtSdt = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtLuong = new javax.swing.JTextField();
        txtMaUv = new javax.swing.JTextField();
        cboMaLoaiHd = new javax.swing.JComboBox<>();
        jPanel10 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        txtHoTen = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        cboPb = new javax.swing.JComboBox<>();
        cboCv = new javax.swing.JComboBox<>();
        lblMaCv1 = new javax.swing.JLabel();
        lblMaCv2 = new javax.swing.JLabel();
        txtNgayKetThuc = new javax.swing.JTextField();
        txtNgayBatDau = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        cboFind = new javax.swing.JComboBox<>();
        txtFind = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();

        setBackground(new java.awt.Color(235, 223, 235));
        setClosable(true);
        setIconifiable(true);
        setResizable(true);

        jPanel1.setBackground(new java.awt.Color(235, 223, 235));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("QUẢN LÝ NHÂN VIÊN");

        tabs.setBackground(new java.awt.Color(112, 194, 180));
        tabs.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(112, 194, 180));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel4.setBackground(new java.awt.Color(112, 194, 180));

        lblMaNV.setBackground(new java.awt.Color(255, 255, 255));
        lblMaNV.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMaNV.setText("Mã nhân viên");

        lblMatKhau.setBackground(new java.awt.Color(255, 255, 255));
        lblMatKhau.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMatKhau.setText("Họ và tên");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Giới tính");

        lblNgaySinh.setBackground(new java.awt.Color(255, 255, 255));
        lblNgaySinh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNgaySinh.setText("Ngày sinh");

        lblSdt.setBackground(new java.awt.Color(255, 255, 255));
        lblSdt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSdt.setText("Số điện thoại");

        lblEmail.setBackground(new java.awt.Color(255, 255, 255));
        lblEmail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblEmail.setText("Email");

        lblDiaChi.setBackground(new java.awt.Color(255, 255, 255));
        lblDiaChi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDiaChi.setText("Địa chỉ");

        lblLuong.setBackground(new java.awt.Color(255, 255, 255));
        lblLuong.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblLuong.setText("Lương (VND)");

        lblMaPb.setBackground(new java.awt.Color(255, 255, 255));
        lblMaPb.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMaPb.setText("Tên phòng ban");

        lblMaCv.setBackground(new java.awt.Color(255, 255, 255));
        lblMaCv.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMaCv.setText("Tên chức vụ");

        lblMaUv.setBackground(new java.awt.Color(255, 255, 255));
        lblMaUv.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMaUv.setText("Mã ứng viên");

        lblMaLoaiHd.setBackground(new java.awt.Color(255, 255, 255));
        lblMaLoaiHd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMaLoaiHd.setText("Tên loại hợp đồng");

        jPanel6.setBackground(new java.awt.Color(112, 194, 180));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btgGioiTinh.add(rdoNam);
        rdoNam.setText("Nam");
        rdoNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNamActionPerformed(evt);
            }
        });

        btgGioiTinh.add(rdoNu);
        rdoNu.setText("Nữ");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdoNam)
                .addGap(18, 18, 18)
                .addComponent(rdoNu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoNam)
                    .addComponent(rdoNu))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cboMaLoaiHd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboMaLoaiHd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMaLoaiHdActionPerformed(evt);
            }
        });

        jPanel10.setBackground(new java.awt.Color(112, 194, 180));
        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnThem.setBackground(new java.awt.Color(255, 255, 204));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icon/image-gallery.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorderPainted(false);
        btnThem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThem.setOpaque(true);
        btnThem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 255, 204));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icon/xoa.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.setBorderPainted(false);
        btnXoa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnXoa.setOpaque(true);
        btnXoa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 255, 204));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icon/edit-text.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setBorderPainted(false);
        btnSua.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSua.setOpaque(true);
        btnSua.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(255, 255, 204));
        btnReset.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icon/circle-of-two-clockwise-arrows-rotation.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.setBorderPainted(false);
        btnReset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReset.setOpaque(true);
        btnReset.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanel11.setBackground(new java.awt.Color(112, 194, 180));
        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnFirst.setBackground(new java.awt.Color(255, 154, 0));
        btnFirst.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnFirst.setText("|<");
        btnFirst.setBorderPainted(false);
        btnFirst.setOpaque(true);
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrev.setBackground(new java.awt.Color(255, 154, 0));
        btnPrev.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnPrev.setText("<<");
        btnPrev.setBorderPainted(false);
        btnPrev.setOpaque(true);
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(255, 154, 0));
        btnNext.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnNext.setText(">>");
        btnNext.setBorderPainted(false);
        btnNext.setOpaque(true);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setBackground(new java.awt.Color(255, 154, 0));
        btnLast.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnLast.setText(">|");
        btnLast.setBorderPainted(false);
        btnLast.setOpaque(true);
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFirst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrev)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLast)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cboPb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboCv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblMaCv1.setBackground(new java.awt.Color(255, 255, 255));
        lblMaCv1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMaCv1.setText("Ngày kết thúc");

        lblMaCv2.setBackground(new java.awt.Color(255, 255, 255));
        lblMaCv2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMaCv2.setText("Ngày bắt đầu");

        txtNgayBatDau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgayBatDauActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lblMaLoaiHd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboMaLoaiHd, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMaCv2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMaCv1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(lblMatKhau)
                            .addComponent(lblMaNV)
                            .addComponent(lblEmail)
                            .addComponent(lblSdt)
                            .addComponent(lblDiaChi)
                            .addComponent(lblLuong)
                            .addComponent(lblMaUv))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSdt)
                                    .addComponent(txtMaNV, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtHoTen)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblNgaySinh)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNgaySinh))
                                    .addComponent(txtEmail))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtMaUv, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMaPb)
                                    .addComponent(lblMaCv))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cboPb, 0, 300, Short.MAX_VALUE)
                                    .addComponent(cboCv, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(288, 288, 288)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaNV)
                            .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMatKhau)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addComponent(lblNgaySinh)
                            .addComponent(txtNgaySinh))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblSdt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblEmail)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiaChi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblLuong)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblMaPb)
                        .addComponent(cboPb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtLuong, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaUv)
                    .addComponent(txtMaUv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaCv)
                    .addComponent(cboCv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboMaLoaiHd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblMaCv2)
                        .addComponent(lblMaCv1)
                        .addComponent(txtNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblMaLoaiHd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabs.addTab("THÔNG TIN NHÂN VIÊN", jPanel2);

        jPanel3.setBackground(new java.awt.Color(112, 194, 180));

        jPanel5.setBackground(new java.awt.Color(112, 194, 180));

        cboFind.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MÃ NHÂN VIÊN", "HỌ TÊN", "MÃ PHÒNG BAN", "MÃ CHỨC VỤ", "MÃ ỨNG VIÊN", "MÃ LOẠI HỢP ĐỒNG" }));
        cboFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFindActionPerformed(evt);
            }
        });

        btnFind.setBackground(new java.awt.Color(255, 255, 204));
        btnFind.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icon/icons8-search-32.png"))); // NOI18N
        btnFind.setText("Tìm kiếm");
        btnFind.setBorderPainted(false);
        btnFind.setOpaque(true);
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhân viên", "Họ và tên", "Giới tính", "Địa chỉ", "SĐT", "Email", "Ngày sinh", "Mã phòng ban", "Mã chức vụ", "Mã ứng viên", "Mã loại hợp đồng", "Lương (VND)", "Ngày bắt đầu", "Ngày kết thúc"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblNhanVienMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVien);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 911, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(cboFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFind)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFind)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboFind, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFind)
                        .addComponent(txtFind)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabs.addTab("DANH SÁCH NHÂN VIÊN", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabs)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdoNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoNamActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {
            // TODO add your handling code here:
            update();
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblNhanVienMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblNhanVienMousePressed

    private void cboFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFindActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboFindActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            // TODO add your handling code here:
            insert();
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        timKiem();
    }//GEN-LAST:event_btnFindActionPerformed

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            this.row = tblNhanVien.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblNhanVienMouseClicked

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void txtNgayBatDauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgayBatDauActionPerformed
        // TODO add your handling code here:
        if (isInputValid()) {
        ngayketthuc();
    }
    }//GEN-LAST:event_txtNgayBatDauActionPerformed

    private void cboMaLoaiHdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMaLoaiHdActionPerformed
        // TODO add your handling code here:
        if (isInputValid()) {
        ngayketthuc();
    }
    }//GEN-LAST:event_cboMaLoaiHdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgGioiTinh;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboCv;
    private javax.swing.JComboBox<String> cboFind;
    private javax.swing.JComboBox<String> cboMaLoaiHd;
    private javax.swing.JComboBox<String> cboPb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblLuong;
    private javax.swing.JLabel lblMaCv;
    private javax.swing.JLabel lblMaCv1;
    private javax.swing.JLabel lblMaCv2;
    private javax.swing.JLabel lblMaLoaiHd;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblMaPb;
    private javax.swing.JLabel lblMaUv;
    private javax.swing.JLabel lblMatKhau;
    private javax.swing.JLabel lblNgaySinh;
    private javax.swing.JLabel lblSdt;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFind;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtLuong;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtMaUv;
    private javax.swing.JTextField txtNgayBatDau;
    private javax.swing.JTextField txtNgayKetThuc;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSdt;
    // End of variables declaration//GEN-END:variables
    NhanVienDAO dao = new NhanVienDAO();
    LoaiHDDAO hddao = new LoaiHDDAO();
    PhongBanDAO pbdao = new PhongBanDAO();
    ChucVuDAO cvdao = new ChucVuDAO();
    int row = -1;

    private void init() {
        this.fillTable();
        this.row = -1;
        this.updateStatus();
        fillComboBoxMaLoaiHd();
        fillComboBoxMaPb();
        fillComboBoxMaCv();
        dienthongtin();
        LocalDate now = LocalDate.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String formattedDate = now.format(formatter);
        txtNgayBatDau.setText(formattedDate);
        txtNgayKetThuc.setEditable(false);
        txtMaNV.setEditable(false);
        txtMaNV.setText(dao.getNextMaNhanVien());
    }
    private boolean isInputValid() {
    // Kiểm tra nếu txtNgayBatDau trống hoặc không hợp lệ
    if (txtNgayBatDau.getText().trim().isEmpty()) {
        return false;
    }

    // Kiểm tra nếu cboMaLoaiHd chưa được chọn
    if (cboMaLoaiHd.getSelectedIndex() == -1) {
        return false;
    }

    // Kiểm tra nếu txtNgayBatDau có thể được phân tích cú pháp thành ngày hợp lệ
    try {
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        sdf.parse(txtNgayBatDau.getText().trim());
    } catch (Exception e) {
        return false;
    }

    return true; // Đầu vào hợp lệ
}
    
    private void ngayketthuc(){
        try {
                String ngayBatDauStr = txtNgayBatDau.getText();
                SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                java.util.Date ngayBatDau = sdf.parse(ngayBatDauStr);
                int thoiHan;
                int loaiHopDongStr = (int) cboMaLoaiHd.getSelectedIndex();
                switch (loaiHopDongStr) {                     
                    case 0:
                        thoiHan = 1000;
                        break;
                    case 1:
                        thoiHan = 12;
                        break;
                    case 2:
                        thoiHan =6;
                        break;
                    case 3:
                        thoiHan = 2;
                        break;
                    default:
                        throw new AssertionError();
                }
                    
                    Calendar cal = Calendar.getInstance();
                    cal.setTime(ngayBatDau);
                    cal.add(Calendar.MONTH, thoiHan);
                    
                    java.util.Date ngayKetThuc = cal.getTime();
                    String ngayKetThucStr = sdf.format(ngayKetThuc);
                    
                    txtNgayKetThuc.setText(ngayKetThucStr);
                } catch (Exception ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Lỗi khi tính ngày kết thúc. Vui lòng kiểm tra lại dữ liệu đầu vào.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
    }
    
    private void fillComboBoxMaLoaiHd() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMaLoaiHd.getModel();
        model.removeAllElements();
        try {
            List<LoaiHD> list = hddao.selectAll();
            for (LoaiHD hd : list) {
                model.addElement(hd.toTenHd());
            }
        } catch (Exception e) {
            Msgbox.alert(this, "Lỗi truy vấn dữ liệu");
            e.printStackTrace();
        }
    }

    private void fillComboBoxMaPb() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboPb.getModel();
        model.removeAllElements();
        try {
            List<PhongBan> list = pbdao.selectAll();
            for (PhongBan pb : list) {
                model.addElement(pb.toTenPb());
            }
        } catch (Exception e) {
            Msgbox.alert(this, "Lỗi truy vấn dữ liệu");
            e.printStackTrace();
        }
    }

    private void fillComboBoxMaCv() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboCv.getModel();
        model.removeAllElements();
        try {
            List<ChucVu> list = cvdao.selectAll();
            for (ChucVu cv : list) {
                model.addElement(cv.toTenCv());
            }
        } catch (Exception e) {
            Msgbox.alert(this, "Lỗi truy vấn dữ liệu");
            e.printStackTrace();
        }
    }

    private void setForm(NhanVien nv) {
        txtMaNV.setText(nv.getMaNhanVien());
        txtHoTen.setText(nv.getHoTen());
        rdoNam.setSelected(nv.isGioiTinh());
        rdoNu.setSelected(!nv.isGioiTinh());
        txtNgaySinh.setText(XDate.toString(nv.getNgaySinh(), "dd-MM-yyyy"));
        txtNgayBatDau.setText(XDate.toString(nv.getNgayBatDau(), "dd-MM-yyyy"));
        txtNgayKetThuc.setText(XDate.toString(nv.getNgayKetThuc(),"dd-MM-yyyy"));
        txtSdt.setText(nv.getSDT());
        txtEmail.setText(nv.getEmail());
        txtDiaChi.setText(nv.getDiaChi());
        DecimalFormat df = new DecimalFormat("#,###.##");
        String formattedSalary = df.format(nv.getLuong());
        txtLuong.setText(formattedSalary);
        txtMaUv.setText(nv.getMaUngVien());
        cboPb.setSelectedItem(dao.tenPb(nv.getMaNhanVien(),nv.getMaPhongban()));
        cboCv.setSelectedItem(dao.tenCv(nv.getMaNhanVien(),nv.getMaChucVu()));
        cboMaLoaiHd.setSelectedItem(dao.tenLhd(nv.getMaNhanVien(),nv.getMaLoaiHd()));
    }

    private NhanVien getForm() throws SQLException {
        NhanVien nv = new NhanVien();


        // Validate họ tên
        String ten = txtHoTen.getText().trim();
        if (ten.isEmpty()) {
            Msgbox.alert(this, "Không được để trống họ tên");
            return null;
        } else if (ten.length() > 100) {
            Msgbox.alert(this, "Họ tên không được vượt quá 100 kí tự");
            return null;
        }
        nv.setHoTen(ten);

        // Validate giới tính
        nv.setGioiTinh(rdoNam.isSelected());

        // Validate ngày sinh
        if (txtNgaySinh.getText().isEmpty()) {
            Msgbox.alert(this, "Không được để trống ngày sinh");
            return null;
        } else {
            try {
                String ngaySinhStr = txtNgaySinh.getText();
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy");
                LocalDate ngaySinh = LocalDate.parse(ngaySinhStr, dtf);
                LocalDate startDate = LocalDate.of(1969, 1, 1);
                LocalDate endDate = LocalDate.of(2006, 12, 31);
                if (ngaySinh.isBefore(startDate) || ngaySinh.isAfter(endDate)) {
                    Msgbox.alert(this, "Ngày sinh phải trong khoảng từ năm 1969 đến 2006!");
                    return null;
                }
                nv.setNgaySinh(java.sql.Date.valueOf(ngaySinh));
            } catch (DateTimeParseException e) {
                Msgbox.alert(this, "Định dạng ngày sinh không hợp lệ!");
                return null;
            }
        }

        // Validate ngày bắt đầu
        if (txtNgayBatDau.getText().isEmpty()) {
            Msgbox.alert(this, "Không được để trống ngày bắt đầu hợp đồng!");
            return null;
        } else {
            try {
                String ngayBatDauStr = txtNgayBatDau.getText();
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy");
                LocalDate ngayBatDau = LocalDate.parse(ngayBatDauStr, dtf);
                LocalDate startDate = LocalDate.of(2018, 1, 1);
                LocalDate endDate = LocalDate.now();

                if (ngayBatDau.isBefore(startDate) || ngayBatDau.isAfter(endDate)) {
                    Msgbox.alert(this, "Hợp đồng phải trong khoảng từ ngày 01-01-2018 đến ngày hiện tại.");
                    return null;
                }
                nv.setNgayBatDau(java.sql.Date.valueOf(ngayBatDau));
            } catch (DateTimeParseException e) {
                Msgbox.alert(this, "Định dạng ngày bắt đầu không hợp lệ!");
                return null;
            }
        }

        // Validate số điện thoại
        String phone = txtSdt.getText().trim();
        if (phone.isEmpty()) {
            Msgbox.alert(this, "Không được để trống số điện thoại");
            return null;
        } else if (phone.length() > 11) {
            Msgbox.alert(this, "Số điện thoại không được vượt quá 11 số");
            return null;
        } else {
            String PHONE_PATTERN = "^(0|\\+84)(\\d{9,10})$";
            if (!phone.matches(PHONE_PATTERN)) {
                Msgbox.alert(this, "Không đúng định dạng số điện thoại");
                return null;
            }
            nv.setSDT(phone);
        }

        // Validate email
        
        String email = txtEmail.getText().trim();
        if (email.isEmpty()) {
            Msgbox.alert(this, "Không được để trống email");
            return null;
        } else {
            String emailRegex = "\\w+@\\w+(\\.\\w+){1,4}";
            if (!email.matches(emailRegex)) {
                Msgbox.alert(this, "Không đúng định dạng email");
                return null;
            } else if (email.length() > 100) {
                Msgbox.alert(this, "Email không được vượt quá 100 ký tự");
                return null;
            }
            nv.setEmail(email);
        }

        // Validate địa chỉ
        String diaChi = txtDiaChi.getText().trim();
        if (diaChi.isEmpty()) {
            Msgbox.alert(this, "Không được để trống địa chỉ");
            return null;
        }
        nv.setDiaChi(diaChi);

        // Validate lương
        String luongText = txtLuong.getText().trim();
        if (luongText.isEmpty()) {
            Msgbox.alert(this, "Không được để trống lương");
            return null;
        } else {
            try {
                double luong = NumberFormat.getInstance().parse(luongText).doubleValue();
                if (luong < 5000000) {
                    Msgbox.alert(this, "Lương phải trên năm triệu");
                    return null;
                }
                nv.setLuong(luong);
            } catch (Exception e) {
                Msgbox.alert(this, "Lương không đúng định dạng số");
                return null;
            }
        }

        // Validate mã phòng ban
        nv.setMaPhongban(dao.maPb((String) cboPb.getSelectedItem()));

        // Validate mã chức vụ
        nv.setMaChucVu(dao.maCv((String) cboCv.getSelectedItem()));

        // Validate mã ứng viên
        String mauv = txtMaUv.getText().trim();
        if (mauv.isEmpty()) {
            Msgbox.alert(this, "Không được để trống mã ứng viên");
            return null;
        } else if (mauv.length() > 5) {
            Msgbox.alert(this, "Mã ứng viên không được vượt quá 5 kí tự");
            return null;
        }
        nv.setMaUngVien(mauv);

        // Validate mã loại hợp đồng
        nv.setMaLoaiHd(dao.maLhd((String) cboMaLoaiHd.getSelectedItem()));

        return nv;
    }

    private void insert() throws SQLException {
    NhanVien nv = getForm();
    if(nv==null){
        return;
    }
    String newMaNV = dao.getNextMaNhanVien();
            nv.setMaNhanVien(newMaNV);

            // Kiểm tra số điện thoại và email đã tồn tại
            String phone = txtSdt.getText().trim();
            if (dao.isPhoneExists(phone)) {
                JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            String email = txtEmail.getText().trim();
            if (dao.isEmailExists(email)) {
                JOptionPane.showMessageDialog(this, "Email đã tồn tại!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            nv.setMaNhanVien(dao.getNextMaNhanVien());
    if(Msgbox.confirm(this,"Bạn muốn thêm nhân viên này?")){
    if (nv != null) {
        try {
            // Tạo mã nhân viên mới
            

            // Thêm nhân viên mới vào cơ sở dữ liệu
            this.dao.insert(nv);
            this.fillTable();
            this.clearForm();
            Msgbox.alert(this, "Thêm mới thành công!");
        } catch (Exception e) {
            Msgbox.alert(this, "Thêm mới thất bại!");
            System.out.print(e);
        }
    }}
}


    private void update() throws SQLException {
        NhanVien nv = getForm();
        if(nv==null){
            return;
        }
        if(Msgbox.confirm(this,"Bạn muốn cập nhật nhân viên này?")){
        {
            String manv = txtMaNV.getText().trim();
            if (!manv.equals(nv.getMaNhanVien())) {
                Msgbox.alert(this, "Mã nhân viên không đúng!");
            } else {
                try {
                    dao.update(nv);
                    this.fillTable();
                    Msgbox.alert(this, "Cập nhật thành công!");
                } catch (Exception e) {
                    Msgbox.alert(this, "Cập nhật thất bại!");
                }
            }
        }}
    }

    private void delete() {
        String manv = txtMaNV.getText().trim();
        if (manv.equals(Auth.user.getMaNhanVien())) {
            Msgbox.alert(this, "Bạn không được xóa chính bạn!");
        } else if (Msgbox.confirm(this, "Bạn muốn xóa nhân viên này?")) {
            try {
                dao.delete(manv);
                this.fillTable();
                Msgbox.alert(this, "Xóa thành công!");

            } catch (Exception e) {
                Msgbox.alert(this, "Xóa thất bại!");
            }
        }
        if (row >= tblNhanVien.getRowCount()) {
            row = tblNhanVien.getRowCount()-1;
            this.edit();
        } else {
            this.edit();
        }

    }

    private void clearForm() {
        txtMaNV.setText(dao.getNextMaNhanVien());
        txtHoTen.setText("");
        txtSdt.setText("");
        txtNgaySinh.setText("");
        txtLuong.setText("");
        txtEmail.setText("");
        txtDiaChi.setText("");
        txtFind.setText("");
        txtMaUv.setText("");
        rdoNam.setSelected(true);
        rdoNu.setSelected(false);
        this.row = -1;
        this.updateStatus();
        txtMaNV.setEditable(false);
    }

    private void edit() {
        String manv = (String) tblNhanVien.getValueAt(this.row, 0);
        NhanVien nv = dao.selectById(manv);
        this.setForm(nv);
        tabs.setSelectedIndex(0);
        this.updateStatus();
    }

    private void first() {
        this.row = 0;
        this.edit();
    }

    private void prev() {
        if (this.row > 0) {
            this.row--;
            this.edit();
        }
    }

    private void next() {
        if (this.row < tblNhanVien.getRowCount() - 1) {
            this.row++;
            this.edit();
        }
    }

    private void last() {
        this.row = tblNhanVien.getRowCount() - 1;
        this.edit();
    }

    private void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        model.setRowCount(0);
        try {
            List<NhanVien> ds = dao.selectAll();
            for (NhanVien nv : ds) {
                Object[] row = {
                    nv.getMaNhanVien(),
                    nv.getHoTen(),
                    nv.isGioiTinh() ? "Nam" : "Nữ",
                    nv.getDiaChi(),
                    nv.getSDT(),
                    nv.getEmail(),
                    XDate.toString(nv.getNgaySinh(), "dd-MM-yyyy"),
                    nv.getMaPhongban(),
                    nv.getMaChucVu(),
                    nv.getMaUngVien(),
                    nv.getMaLoaiHd(),
                    nv.getLuong(),
                    XDate.toString(nv.getNgayBatDau(),"dd-MM-yyyy"),
                    XDate.toString(nv.getNgayKetThuc(),"dd-MM-yyyy")  
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            Msgbox.alert(this, "Lỗi truy vấn dữ liệu!");
            System.out.println(e);
        }
    }

    private void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblNhanVien.getRowCount() - 1);

        txtMaNV.setEditable(false);
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);

        btnFirst.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);
    }

    private void timKiem() {
        this.fillFind();
        this.clearForm();
        this.row = -1;
        updateStatus();
    }

    // Trong phương thức fillFind(), điều chỉnh xử lý khi chọn tìm kiếm theo mã ứng viên
    private void fillFind() {
        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        model.setRowCount(0);

        String keyword = txtFind.getText();
        try {
            List<NhanVien> ds = new ArrayList<>();
            switch (cboFind.getSelectedIndex()) {
                case 0:
                    NhanVien nv = dao.selectById(keyword);
                    if (nv != null) {
                        ds.add(nv);
                    }
                    break;
                case 1:
                    ds = dao.selectByten(keyword); // Danh sách nhân viên theo tên
                    break;
                case 2:
                    ds = (List<NhanVien>) dao.selectByMaPb(keyword); // Danh sách nhân viên theo mã phòng ban
                    break;
                case 3:
                    ds = (List<NhanVien>) dao.selectByMaCv(keyword); // Danh sách nhân viên theo mã chức vụ
                    break;
                case 4:
                    NhanVien nvByMaUv = dao.selectByMaUv(keyword); // Đối tượng nhân viên theo mã ứng viên
                    if (nvByMaUv != null) {
                        ds.add(nvByMaUv); // Thêm vào danh sách nếu có kết quả
                    }
                    break;
                case 5:
                    ds = (List<NhanVien>) dao.selectByMaLoaiHD(keyword); // Danh sách nhân viên theo mã loại hợp đồng
                    break;
                default:
                    this.fillTable();
                    break;
            }

            for (NhanVien nvItem : ds) {
                Object[] row = {
                    nvItem.getMaNhanVien(),
                    nvItem.getHoTen(),
                    nvItem.isGioiTinh() ? "Nam" : "Nữ",
                    nvItem.getDiaChi(),
                    nvItem.getSDT(),
                    nvItem.getEmail(),
                    XDate.toString(nvItem.getNgaySinh(), "dd-MM-yyyy"),
                    nvItem.getMaPhongban(),
                    nvItem.getMaChucVu(),
                    nvItem.getMaUngVien(),
                    nvItem.getMaLoaiHd(),
                    nvItem.getLuong(),
                    XDate.toString(nvItem.getNgayBatDau(),"dd-MM-yyyy"),
                    XDate.toString(nvItem.getNgayKetThuc(),"dd-MM-yyyy")
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            Msgbox.alert(this, "Lỗi truy vấn dữ liệu!");
            System.out.println(e);
        }
    }

    void dienthongtin() {
        txtMaUv.setText(CandidateManagement.maUngVien);
        txtDiaChi.setText(CandidateManagement.dcUv);
        txtEmail.setText(CandidateManagement.emailUv);
        txtHoTen.setText(CandidateManagement.tenUv);
        txtNgaySinh.setText(CandidateManagement.ngaySinhUv);
        txtSdt.setText(CandidateManagement.sdtUv);
        if (CandidateManagement.cvUv != null) {
    cboCv.setSelectedItem(CandidateManagement.cvUv);
} else {
    // Xử lý trường hợp giá trị của cvUv không hợp lệ (ví dụ: hiển thị thông báo lỗi)
    System.out.println("Không tìm thấy giá trị trong ComboBox.");
}

        System.out.println(CandidateManagement.cvUv);
        rdoNam.setSelected(CandidateManagement.gioiTinhUv);
        rdoNu.setSelected(!CandidateManagement.gioiTinhUv);
    }

}
